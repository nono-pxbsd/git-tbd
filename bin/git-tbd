#!/bin/bash

# git-tbd : un mini outil CLI pour g√©rer un workflow Trunk-Based Development üöÄ
# Version : 1.0.0
# Auteur : nono.pxbsd
# Licence : MIT
# D√©pendances : git, gh (GitHub CLI)

# Couleurs pour la sortie terminal
# Utilisation de codes ANSI pour la coloration du texte
# BOLD pour le texte en gras, GREEN pour le texte vert, YELLOW pour le texte jaune, RESET pour r√©initialiser la couleur
# Ces couleurs sont utilis√©es pour am√©liorer la lisibilit√© des messages dans le terminal
# BOLD est utilis√© pour les titres et les messages importants,
# GREEN pour les messages de succ√®s, YELLOW pour les avertissements et RESET pour r√©initialiser la couleur √† la fin
BOLD="\e[1m"
GREEN="\e[32m"
YELLOW="\e[33m"
RESET="\e[0m"

# Chemins des r√©pertoires
# SCRIPT_DIR est le r√©pertoire o√π se trouve ce script
# ROOT_DIR est le r√©pertoire racine du projet
# Ces variables sont utilis√©es pour charger les biblioth√®ques et les scripts n√©cessaires
SCRIPT_PATH="$(readlink -f "$0")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"

# Chargement des biblioth√®ques
source "${SCRIPT_DIR}/../lib/utils.sh"
source "${SCRIPT_DIR}/../lib/branches.sh"
source "${SCRIPT_DIR}/../lib/commands.sh"


# Load la configuration git-tbd
load_git_tbd_config


# Fonction d'aide pour afficher les commandes disponibles
# Affiche un message d'aide avec la liste des commandes disponibles et leur usage
# Utilis√©e pour guider l'utilisateur sur les diff√©rentes actions qu'il peut effectuer avec git-tbd
# Affiche √©galement une br√®ve description de chaque commande pour aider l'utilisateur √† comprendre leur fonction
# Utilise les couleurs d√©finies pr√©c√©demment pour am√©liorer la lisibilit√©
# Affiche un message d'aide d√©taill√© pour chaque commande
# Affiche un message d'aide g√©n√©ral si l'utilisateur demande de l'aide ou si la commande n'est pas reconnue
# Utilise la fonction print_help pour afficher l'aide
# Affiche un message d'aide g√©n√©ral si l'utilisateur demande de l'aide ou si la commande
function print_help() {
  echo -e "${BOLD}git-tbd${RESET} - CLI pour workflow Trunk-Based Development\n"
  echo "Usage :"
  echo "  git-tbd start              ‚Üí S√©lection interactive du type de branche √† cr√©er"
  echo "  git-tbd finish             ‚Üí Merge dans main + suppression de la branche"
  echo "  git-tbd sync               ‚Üí Met √† jour la branche courante depuis main"
  echo "  git-tbd pr                 ‚Üí Ouvre une Pull Request automatiquement"
  echo "  git-tbd validate           ‚Üí Valide une Pull Request avec diff√©rentes m√©thodes de merge"
  #echo "  git-tbd bump <type>        ‚Üí Bump la version (major, minor, patch)"
  echo "  git-tbd help               ‚Üí Affiche cette aide"
}

# Dispatcher
case "$1" in
  start)
    shift
    start "$1"
    ;;
  finish)
    shift
    finish "$@"
    ;;
  publish)
    shift
    publish "$@"
    ;;
  pr)
    shift
    open_pr "$@"
    ;;
  validate)
    shift
    validate_pr "$@"
    ;;
  sync)
    shift
    sync_branch_to_remote "$@"
    ;;
  help | *)
    print_help
    ;;
esac
