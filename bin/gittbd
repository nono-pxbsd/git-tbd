#!/bin/bash
# gittbd : CLI pour workflow Trunk-Based Development üöÄ
# Version : 3.2.1
# Auteur : nono.pxbsd
# Licence : MIT

set -euo pipefail

# Couleurs pour l'aide
BOLD="\e[1m"
GREEN="\e[32m"
YELLOW="\e[33m"
CYAN="\e[36m"
RESET="\e[0m"

# D√©tection du r√©pertoire d'installation
SCRIPT_PATH="$(readlink -f "$0")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"

# Chargement via le loader
if [[ -f "${SCRIPT_DIR}/../lib/loader.sh" ]]; then
  # shellcheck source=../lib/loader.sh
  source "${SCRIPT_DIR}/../lib/loader.sh"
else
  echo "‚ùå Impossible de trouver les biblioth√®ques. R√©installez gittbd."
  exit 1
fi

# Fonction d'aide
print_help() {
  echo -e "${BOLD}gittbd${RESET} - CLI pour workflow Trunk-Based Development"
  echo -e "${BOLD}Version :${RESET} 3.2.1\n"
  
  echo -e "${BOLD}Usage :${RESET}"
  echo -e "  ${CYAN}gittbd start [type/name]${RESET}      ‚Üí Cr√©e une nouvelle branche (alias: s)"
  echo -e "  ${CYAN}gittbd finish [options]${RESET}       ‚Üí Merge dans main + suppression (alias: f)"
  echo -e "  ${CYAN}gittbd publish [branch]${RESET}       ‚Üí Publie la branche sur origin (alias: p)"
  echo -e "  ${CYAN}gittbd pr [branch]${RESET}            ‚Üí Ouvre une Pull Request"
  echo -e "  ${CYAN}gittbd mr [branch]${RESET}            ‚Üí Alias de 'pr' (pour GitLab)"
  echo -e "  ${CYAN}gittbd validate [branch]${RESET}      ‚Üí Valide une PR/MR (alias: v, merge)"
  echo -e "  ${CYAN}gittbd cleanup [branch]${RESET}       ‚Üí Nettoie apr√®s merge GitHub (alias: clean, c)"
  echo -e "  ${CYAN}gittbd sync [branch]${RESET}          ‚Üí Synchronise avec origin"
  echo -e "  ${CYAN}gittbd bump <type>${RESET}            ‚Üí Cr√©e un tag de version (major/minor/patch)"
  echo -e "  ${CYAN}gittbd help${RESET}                   ‚Üí Affiche cette aide\n"
  
  echo -e "${BOLD}Options globales :${RESET}"
  echo -e "  ${YELLOW}SILENT_MODE=true${RESET}           ‚Üí Mode silencieux (minimal)"
  echo -e "  ${YELLOW}DEBUG_MODE=true${RESET}            ‚Üí Mode debug (verbose)"
  echo -e "  ${YELLOW}GIT_PLATFORM=gitlab${RESET}        ‚Üí Utilise GitLab au lieu de GitHub\n"
  
  echo -e "${BOLD}Exemples :${RESET}"
  echo -e "  gittbd start feature/login-form"
  echo -e "  gittbd s                          ${GREEN}# Mode interactif${RESET}"
  echo -e "  gittbd f --pr                     ${GREEN}# Finish avec PR${RESET}"
  echo -e "  gittbd validate                   ${GREEN}# Valide la PR${RESET}"
  echo -e "  gittbd cleanup feature/login      ${GREEN}# Apr√®s merge GitHub${RESET}"
  echo -e "  gittbd bump patch\n"
  
  echo -e "${BOLD}Configuration :${RESET}"
  echo -e "  Fichier : ${CYAN}~/.local/share/gittbd/lib/config.sh${RESET}"
  echo -e "  Variables : DEFAULT_BASE_BRANCH, DEFAULT_MERGE_MODE, etc.\n"
  
  echo -e "${BOLD}Documentation :${RESET}"
  echo -e "  README      : ${CYAN}https://github.com/nono-pxbsd/git-tbd${RESET}"
  echo -e "  Migration   : ${CYAN}~/.local/share/gittbd/docs/MIGRATION_v3.md${RESET}"
  echo -e "  Versioning  : ${CYAN}~/.local/share/gittbd/docs/VERSIONING.md${RESET}"
  echo -e "  Tutorial    : ${CYAN}~/.local/share/gittbd/docs/TUTORIAL.md${RESET}"
}

# Dispatcher avec raccourcis et alias
case "${1:-help}" in
  start|s)
    shift
    start "$@"
    ;;
  finish|f)
    shift
    finish "$@"
    ;;
  publish|p)
    shift
    publish "$@"
    ;;
  pr|mr)
    shift
    open_request "$@"
    ;;
  validate|v|merge)
    shift
    validate_request "$@"
    ;;
  cleanup|clean|c)
    shift
    cleanup "$@"
    ;;
  sync)
    shift
    sync_branch_to_remote "$@"
    ;;
  bump|b)
    shift
    bump "$@"
    ;;
  help|--help|-h|*)
    print_help
    ;;
esac